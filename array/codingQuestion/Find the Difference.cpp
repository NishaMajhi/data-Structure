/*
You are given two strings s and t.

String t is generated by random shuffling string s and then add one more letter at a random position.

Return the letter that was added to t.

 

Example 1:
Input: s = "abcd", t = "abcde"
Output: "e"
Explanation: 'e' is the letter that was added.


Example 2:
Input: s = "", t = "y"
Output: "y"


Example 3:
Input: s = "a" , t = "aa"
Output: "a"


Constraints:

0 <= s.length <= 1000
t.length == s.length + 1
s and t consist of lowercase English letters.
*/


class Solution {
public:
    char findTheDifference(string s, string t) {
        
        unordered_map<char,int> mp;
        int n = s.size();
        for(int i=0;i<n;i++)
            mp[s[i]]++;
        
        for(auto x:t){
            if(mp.find(x) == mp.end())
                return x;
            
            //if a single letter appear more than 1 time
            if(--mp[x] < 0)
                return x;
        }
        return '\0';
    }
};
